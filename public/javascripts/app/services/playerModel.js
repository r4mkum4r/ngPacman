// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

angular.module('pacman.services').service('PlayerModel', function() {
  var PlayerModel;
  return PlayerModel = (function() {
    var defaults;

    defaults = {
      id: 0,
      pos: {
        x: 0,
        y: 0
      },
      speed: {
        x: 2,
        y: 4
      },
      type: 0,
      isHost: false,
      dimensions: {
        width: 20,
        height: 100
      }
    };

    function PlayerModel(player) {
      this.draw = __bind(this.draw, this);
      this.getY = __bind(this.getY, this);
      this.setY = __bind(this.setY, this);
      this.getX = __bind(this.getX, this);
      this.setX = __bind(this.setX, this);
      this.options = angular.extend({}, defaults, player);
    }

    PlayerModel.prototype.setX = function(newX) {
      return this.options.pos.x = newX;
    };

    PlayerModel.prototype.getX = function() {
      return this.options.pos.x;
    };

    PlayerModel.prototype.setY = function(newY) {
      return this.options.pos.y = newY;
    };

    PlayerModel.prototype.getY = function() {
      return this.options.pos.y;
    };

    PlayerModel.prototype.getId = function() {
      return this.options.id;
    };

    PlayerModel.prototype.getType = function() {
      return this.options.type;
    };

    PlayerModel.prototype.update = function(key) {
      if (this.getY() + this.options.dimensions.height > 400) {
        this.setY(400 - this.options.dimensions.height);
      }
      if (this.getY() < 0) {
        this.setY(0);
      }
      if (key === 38) {
        this.setY(this.getY() - this.options.speed.y);
      }
      if (key === 40) {
        return this.setY(this.getY() + this.options.speed.y);
      }
    };

    PlayerModel.prototype.draw = function(canvas) {
      return canvas.fillRect(this.options.pos.x, this.options.pos.y, this.options.dimensions.width, this.options.dimensions.height);
    };

    return PlayerModel;

  })();
});
